pipeline {
    agent any
    tools {
        maven 'Maven3'
    }
    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    extensions: [[$class: 'GitLFSPull', gitLfsEnabled: false]],
                    userRemoteConfigs: [[
                        credentialsId: 'github-pat', 
                        url: 'https://github.com/HakimBJ26/pfe_project-bpmn-procesing.git'
                    ]]
                ])
            }
        }
        stage('Build auth-service') {
            steps {
                dir('spring-boot-microservices-main/auth-service') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }
        stage('Unit Tests') {
            steps {
                dir('spring-boot-microservices-main/auth-service') {
                    sh 'mvn test -Dspring.profiles.active=test'
                }
            }
            post {
                always {
                    junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                dir('spring-boot-microservices-main/auth-service') {
                    sh 'docker build -t auth-service:latest .'
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                echo 'Push to Docker registry can be configured here'
                // sh 'docker tag auth-service:latest your-registry/auth-service:latest'
                // sh 'docker push your-registry/auth-service:latest'
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
