server.port=8997

application-title=Job Service

spring.application.name=job-service

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.topic.name=notificationTopic

spring.config.import=configserver:http://localhost:8888/

# Camunda Configuration
camunda.bpm.admin-user.id=demo
camunda.bpm.admin-user.password=demo
camunda.bpm.filter.create=All tasks

# Database Configuration (utilisez une base d�di�e pour Camunda)
spring.datasource.url=jdbc:mysql://localhost:3306/camunda_db
spring.datasource.username=root
spring.datasource.password=root
camunda.bpm.database.schema-update=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true

# D�sactiver l'authentification Camunda par d�faut
camunda.bpm.job-execution.enabled=true
camunda.bpm.webapp.enabled=false

# Activation du d�ploiement automatique des ressources
camunda.bpm.auto-deployment-enabled=true
camunda.bpm.deployment-resource-pattern=classpath*:**/*.bpmn
camunda.bpm.history-level=full

camunda.bpm.rest.enabled=true
camunda.bpm.rest.auth.enabled=true

# CORS Configuration
spring.mvc.cors.allowed-origins=http://localhost:3000
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE
spring.mvc.cors.allowed-headers=*