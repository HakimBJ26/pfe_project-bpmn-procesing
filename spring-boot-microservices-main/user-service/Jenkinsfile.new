pipeline {
    agent any
    tools {
        maven 'Maven3'
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build user-service') {
            steps {
                dir('spring-boot-microservices-main/user-service') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }
        stage('Unit Tests') {
            steps {
                dir('spring-boot-microservices-main/user-service') {
                    sh 'mvn test -Dspring.profiles.active=test'
                }
            }
            post {
                always {
                    junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                dir('spring-boot-microservices-main/user-service') {
                    sh 'docker build -t user-service:latest .'
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                echo 'Push to Docker registry can be configured here'
                // sh 'docker tag user-service:latest your-registry/user-service:latest'
                // sh 'docker push your-registry/user-service:latest'
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
